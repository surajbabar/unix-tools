<project name="unix-tools" default = "dist">

    <target name="starting">
        <mkdir dir="build/tests"/>
        <mkdir dir="build/src"/>
        <mkdir dir="build/code-coverage/instrumented"/>
        <mkdir dir="build/code-coverage/reports/xml"/>
        <mkdir dir="build/code-coverage/reports/html"/>
        <mkdir dir="build/code-coverage/coverage/xml"/>
        <mkdir dir="build/code-coverage/coverage/html"/>
        <mkdir dir="build/code-coverage/coverage/summary-xml"/>
    </target>

    <target name="compile" depends="starting">
        <javac srcdir="src" destdir="build/src" debug="yes" includeantruntime="false">
            <classpath refid="cobertura.classpath" />
        </javac>
        <javac srcdir="tests" destdir="build/tests"
               classpath="build/src;external-lib/junit-4.10.jar" includeantruntime="false">
            <classpath refid="cobertura.classpath" />
        </javac>
    </target>

    <path id="cobertura.classpath">
        <fileset dir="external-lib">
            <include name="cobertura-2.0.3.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <target name="test" depends="compile">
        <junit>
            <classpath>
                <pathelement location="build/src"/>
                <pathelement location="build/tests"/>
                <pathelement location="external-lib/junit-4.10.jar"/>
            </classpath>
            <batchtest >
                <fileset dir="build/tests">
                    <include name="**/*Test*"/>
                </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
    </target>
    <target name="instrument" depends="test">
        <delete file="cobertura.ser"/>
        <delete dir="build/code-coverage/instrumented" />
        <cobertura-instrument todir="build/code-coverage/instrumented">
            <fileset dir="build/src">
                <include name="**/*.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test-coverage" depends="test">
        <junit fork="yes" dir="." failureProperty="test.failed">
            <classpath>
                <pathelement location="build/code-coverage/instrumented"/>
                <pathelement location="build/src" />
                <pathelement location="build/tests" />
                <pathelement location="lib/junit-4.10.jar"/>
            </classpath>

            <classpath refid= "cobertura.classpath"/>

            <formatter type="xml" />
            <test name="testcase" todir="build/code-coverage/reports/xml" if="testcase" />
            <batchtest todir="build/code-coverage/reports/xml" unless="testcase">
                <fileset dir="tests">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="build/code-coverage/reports/xml">
            <fileset dir="build/code-coverage/reports/xml">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="build/code-coverage/reports/html" />
        </junitreport>
    </target>

    <target name="coverage-check">
        <cobertura-check branchrate="34" totallinerate="100" />
    </target>
    <target name="coverage-report">
        <cobertura-report srcdir="src" destdir="build/code-coverage/coverage/xml" format="xml" />
    </target>

    <target name="summary-coverage-report">
        <cobertura-report srcdir="src" destdir="build/code-coverage/coverage/summaryxml" format="summaryXml" />
    </target>

    <target name="alternate-coverage-report">
        <cobertura-report destdir="build/code-coverage/coverage/html">
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>

    <target name="coverage"
            depends="instrument,test-coverage,coverage-report,summary-coverage-report,alternate-coverage-report"
            description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports.">
    </target>
    <target name="createJar" depends="coverage">
        <mkdir dir="unix-tools_dist/lib"/>
        <mkdir dir="unix-tools_dist/bin"/>
        <jar destfile="unix-tools_dist/lib/unix-tools.jar" basedir="build/src"/>
    </target>

    <target name="copyScripts" depends="createJar">
        <copydir src="Commands" dest="build/bin"/>
    </target>

    <target name="copyReadme" depends="copyScripts">
        <copy file="README.md" todir="unix-tools_dist"/>
    </target>

    <target name="dist" depends="copyReadme">
        <zip zipfile="unix-tools.zip" basedir="unix-tools_dist"/>
    </target>

    <target name="clean">
        <delete dir="build"/>
        <delete dir="unix-tools_dist"/>
        <delete file="unix-tools.zip"/>
    </target>
</project>